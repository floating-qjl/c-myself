给定一个二维矩阵 matrix，以下类型的多个请求：

计算其子矩形范围内元素的总和，该子矩阵的 左上角 为 (row1, col1) ，右下角 为 (row2, col2) 。
实现 NumMatrix 类：

NumMatrix(int[][] matrix) 给定整数矩阵 matrix 进行初始化
int sumRegion(int row1, int col1, int row2, int col2) 返回 左上角 (row1, col1) 、右下角 (row2, col2) 所描述的子矩阵的元素 总和 。











typedef struct 
{
    int**sum;
} NumMatrix;

int arr[205][205];
NumMatrix* numMatrixCreate(int** matrix, int n, int* m) 
{
    if(n==0||m[0]==0)
      return 0;

    for(int a=0;a<n;++a)
    {
        for(int b=1;b<=m[a];++b)
        {
          arr[a+1][b]=arr[a][b]+arr[a+1][b-1]+matrix[a][b-1]-arr[a][b-1];
        }
    }
    NumMatrix* ret=(NumMatrix*)malloc(sizeof(NumMatrix));
    return ret;
}

int numMatrixSumRegion(NumMatrix* obj, int row1, int col1, int row2, int col2) 
{
    return arr[row2+1][col2+1]-arr[row1][col2+1]-arr[row2+1][col1]+arr[row1][col1];
}

void numMatrixFree(NumMatrix* obj) 
{
    free(obj);
}
