给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。

如果数组中不存在目标值 target，返回 [-1, -1]。






/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* searchRange(int* nums, int numsSize, int target, int* returnSize)
{
    int left=0,right=numsSize-1;
    int*arr=(int*)malloc(8);
    while(left<=right)
    {
        int mid=left+(right-left)/2;
        if(nums[mid]>target)
          right=mid-1;
        else if(nums[mid]<target)
          left=mid+1;
        else if(nums[mid]==target)
          right=mid-1;
    }
    if(left>=numsSize||nums[left]!=target)
      arr[0]=-1;
    else
      arr[0]=left;

    left=0,right=numsSize-1;
    while(left<=right)
    {
        int mid=left+(right-left)/2;
        if(nums[mid]>target)
          right=mid-1;
        else if(nums[mid]<target)
          left=mid+1;
        else if(nums[mid]==target)
          left=mid+1;
    }
    if(right<0||nums[right]!=target)
      arr[1]=-1;
    else
      arr[1]=right;
    
    *returnSize=2;
    return arr;
}
