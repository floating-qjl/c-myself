给定两个整数数组，preorder 和 postorder ，其中 preorder 是一个具有 无重复 值的二叉树的前序遍历，postorder 是同一棵树的后序遍历，重构并返回二叉树。

如果存在多个答案，您可以返回其中 任何 一个。






/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    Map<Integer,Integer> map = new HashMap<>();
    public TreeNode constructFromPrePost(int[] preorder, int[] postorder) {
        for(int i = 0;i < postorder.length; ++i){
            map.put(postorder[i],i);
        }
        return build(preorder,0,preorder.length-1,postorder,0,postorder.length-1);
    }

    private TreeNode build(int[] preorder,int preleft,int preright,
    int[] postorder,int postleft,int postright){
        if(preleft > preright){
            return null;
        }
        if(preleft == preright){
            return new TreeNode(preorder[preleft]);
        }

        int root = preorder[preleft];
        int val = preorder[preleft + 1];
        TreeNode node = new TreeNode(root);
        int index = map.get(val);
        int count = index - postleft + 1;
        
        node.left = build(preorder,preleft + 1,preleft + count,postorder,postleft,index);
        node.right = build(preorder,preleft + count + 1,preright,postorder,index + 1,postright - 1);

        return node;
    }
}
