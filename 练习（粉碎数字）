小鱼同学得到了n个数字，他想知道，如果把这n个数字扔到粉碎机粉碎一下，能组成的最大数是多少？
小鱼的同学们完全不明白粉碎机怎样粉碎数字，小鱼就数字粉碎做了一个定义：把数字完全打碎，比如有2个数198和63，
那么粉碎后有数字1、9、8、6、3，那么能够组成的最大数就是98631。请你编写程序，帮助小鱼同学实现这个奇特的想法。











#include <stdio.h>
#include <stdlib.h>
int test(const void* e1, const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}

int main()
{
	int n;
	scanf("%d", &n);
	int* arr1 = (int*)malloc(4 * n);
	int* arr2 = (int*)malloc(4 * n * 4);
	int sum = 0;
	for (int a = 0;a < n;a++)
	{
		scanf("%d", &arr1[a]);
		if (arr1[a] == 0)
		{
			arr2[sum] = arr1[a];
			sum++;
		}
		while (arr1[a])
		{
			arr2[sum] = arr1[a] % 10;
			arr1[a] /= 10;
			sum++;
		}
	}
	qsort(arr2, sum, 4, test);
	if (arr2[sum - 1] != 0)
	{
		for (int a = sum - 1;a >= 0;a--)
			printf("%d", arr2[a]);
	}
	else
		printf("%d", 0);
	return 0;
}
