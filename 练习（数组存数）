今有N个数组，初始时，N个数组均为空。共有M次操作，每次在第X个数组中加入数字Y。问最终各数组中有多少数，并将它们排序输出。
比如，输入如下数据：
3 5
1 3
1 2
1 1
2 1
3 1
表示有3个数组，共有5次操作，分别向第1个数组存入3，第1个数组存入2，第1个数组存入1，第2个数组存入1，第3个数组存入1。
输出如下：
3 1 2 3
1 1
1 1
第1行表示：第1个数组中有3个数，排序结果为1 2 3
第2行表示：第2个数组中有1个数，排序结果为1
第3行表示：第3个数组中有1个数，排序结果为1






#include <string.h>
#include <stdlib.h>
int check(const void* e1,const void* e2)
{
	return *(int*)e1 - *(int*)e2;
}
int main()
{
	int n, m;
	scanf("%d %d", &n, &m);
	int arr[1000][1000] = { 0 };
	int sum[1000] = { 0 };
	for (int b = 0;b < m;b++)
	{
		int x, y;
		scanf("%d %d", &x, &y);
		arr[x - 1][b] = y;
		sum[x - 1] += 1;

	}
	for (int a = 0;a < n;a++)
	{
		int count1 = 0;
		printf("%d ", sum[a]);
		if (sum[a] == 0)
		{
			printf("\n");
			continue;
		}
		qsort(arr[a], 1000, 4, check);
		for (int b = 0;b < 1000;b++)
		{
			if (arr[a][b] != 0)
			{
				count1++;
			}			
			if (arr[a][b] < 0)
			{
				printf("%d ", arr[a][b]);
			}
		}
		for (int b = count1;b <sum[a];b++)
		{
			printf("%d ", 0);
		}
		for (int b = 0;b < 1000;b++)
		{
			if (arr[a][b] > 0)
			{
				printf("%d ", arr[a][b]);
			}
		}	
		printf("\n");
	}
	return 0;
}











#include<stdio.h>
int main()
{
    int N,M,X,Y;
    scanf("%d%d",&N,&M);
    int num[N][M+1];
    for(int i=0;i<N;i++){
        num[i][0]=0;
    }
    //操作
    for(int i=0;i<M;i++){
        scanf("%d%d",&X,&Y);
        X--;
        int pos=++num[X][0];
        //数组中已有元素时插入排序，小的在前,其余后移一位
        if(pos>1 && num[X][pos-1]>Y){
            for(;num[X][pos-1]>Y && pos>1;pos--){
                num[X][pos]=num[X][pos-1];
            }
            num[X][pos]=Y;
        }
        else{
            num[X][pos]=Y;
        }
    }
    //输出
    for(int i=0;i<N;i++){
        for(int j=0;j<=num[i][0];j++){
            printf("%d ",num[i][j]);
        }
        printf("\n");
    }
    return 0;
}
