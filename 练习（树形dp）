无锡学院算法协会迎来了第一次团建，这次团建有 NN 名同学和学校老师，编号为 1∼N1∼N。

但是同学们都是第一次见面，所以除了社牛都不太敢与协会负责人以及老师直接交谈，

他们的关系就像一棵以公司大老板为根的树，父节点就是子节点的直接上司。

每个学生有一个快乐指数，用整数 H_iH 
i
​
  给出，其中 1 \le i \le N1≤i≤N。

现在要进行团建，不过，没有同学愿意和他不喜欢的老师或同学一起参会。

在满足这个条件的前提下，算法协会希望邀请一部分同学和老师参会，使得所有参加的同学的快乐指数总和最大，求这个最大值。



#include <stdio.h>
#include <string.h>
#define MAX(a,b) a>b?a:b
#define N 6010
int happy[N];
int father[N];
int dp[N][2];
int major[N],transfer[N],tag[N];
int count;
void add(int a,int b)
{
	tag[count]=b;
	transfer[count]=major[a];
	major[a]=count++;
}
void dfs(int root)
{
	dp[root][1]=happy[root];
	for(int a=major[root];a!=-1;a=transfer[a])
	{
		int b=tag[a];
		dfs(b);
		dp[root][1]+=dp[b][0];
		dp[root][0]+=MAX(dp[b][0],dp[b][1]);
	}
}
int main()
{
	int n;
	scanf("%d",&n);
	for(int a=1;a<=n;++a)
	scanf("%d",&happy[a]);
    memset(major,-1,sizeof(major));
	for(int a=0;a<n-1;++a)
	{
		int b,c;
		scanf("%d%d",&b,&c);
		add(c,b);
		father[b]=1;
	}
	int root=1;
	while(father[root])
	++root;
	dfs(root);
	printf("%d",MAX(dp[root][0],dp[root][1]));
	return 0;
}
