2020 年春节期间，有一个特殊的日期引起了大家的注意：2020 年 2 月 2 日。
因为如果将这个日期按 “yyyymmdd” 的格式写成一个 8 位数是 20200202，恰好是一个回文数。我们称这样的日期是回文日期。

有人表示 20200202 是 “千年一遇” 的特殊日子。对此小明很不认同，因为不到 2 年之后就是下一个回文日期：20211202 即 2021 年 12 月 2 日。

也有人表示 20200202 并不仅仅是一个回文日期，还是一个 ABABBABA 型的回文日期。对此小明也不认同，
因为大约 100 年后就能遇到下一个 ABABBABA 型的回文日期：21211212 即 2121 年 12 月 12 日。算不上 “千年一遇”，顶多算 “千年两遇”。

给定一个 8 位数的日期，请你计算该日期之后下一个回文日期和下一个 ABABBABA 型的回文日期各是哪一天。




#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[])
{
 // 请在此输入您的代码
  int n;
	scanf("%d", &n);
	int dayold = n % 100;
	int monthold = n / 100 % 100;
	int year = n / 10000;
	for (int a = year;;++a)
	{
		int month = (a / 10 % 10) + 10 * (a % 10);
		int day = a / 1000 + 10 * (a / 100 % 10);
		if (month <= 12 && month > 0 && day > 0 && day <= 30 && !(month == monthold && day == dayold))
		{
			printf("%d%02d%02d\n", a, month, day);
			break;
		}
	}
	for (int a = year;;++a)
	{
		if ((a % 10 == a / 100 % 10) && (a / 10 % 10 == a / 1000))
		{
			int month = a % 10 * 10 + a / 1000;
			int day = a % 10 * 10 + a / 1000;
			if (month <= 12 && month > 0 && day > 0 && day <= 30 && !(month == monthold && day == dayold && a == year))
			{
				printf("%d%02d%02d", a, month, day);
				break;
			}
		}
	}
  return 0;
}
