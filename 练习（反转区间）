
查找通过对初始排列执行一次反转运算可以获得的字典上尽可能小的排列。

题目设定：
排列是一个数组，由 nn 将整数与 11 自 nn 按任意顺序排列。例如 [2，3，1，5，4][2，3，1，5，4] 是一个排列，
但是 [1，2，2][1，2，2] 不是排列 （22 在数组中出现两次），并且 [1，3，4][1，3，4] 也不是排列 （nn = 33 但是有 44 在数组中）。

字典序最小：即按照字典序从小到大排序，例如长度为 55 的最小字典序排列为 [1，2，3，4，5][1，2，3，4，5]。

又例如 [1，5，4，3，2][1，5，4，3，2] 的字典序小于 [2，1，3，4，5][2，1，3，4，5]。



#include <stdio.h>
#include <stdlib.h>
int p[510];
int arr[510];
void swap(int LL,int RR)
{
    while(LL<=RR)
    {
        int a=arr[LL];
        arr[LL]=arr[RR];
        arr[RR]=a;
        ++LL;
        --RR;
    }
}
int main()
{
	int n;
	scanf("%d", &n);
	while (n--)
	{
		int num;
		scanf("%d", &num);
		for (int a = 1;a <= num;++a)
        {
			scanf("%d", &arr[a]);
            p[arr[a]]=a;
        }
		for (int a = 1;a <= num;++a)
			if(p[a]!=a)
            {
               swap(a,p[a]);
               break;
            }
        for(int a=1;a<=num;++a)
        printf("%d ",arr[a]);
		printf("\n");
	}
	return 0;
}
