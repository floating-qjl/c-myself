//输入N（N<=10）个不超过4位的整数，并要求按字典顺序（字典顺序的方法：先比较第一个数字，
//小者在先，若相同再比较第2位数字，以此类推），由小到大排序输出。



#include <stdio.h>
#include <string.h>
#include <stdlib.h>
typedef struct stu
{
	char num[5];
}*Yyds;
int test(const void* e1, const void* e2)
{
	return strcmp(((Yyds)e1)->num, ((Yyds)e2)->num);
}
int main()
{
	int n;
	scanf("%d", &n);
	int a = 0;
	Yyds arr = (Yyds)malloc(n*sizeof(struct stu));
	for (a = 0;a < n;a++)
	{
		scanf("%s", arr[a].num);
	}
	qsort(arr, n, sizeof(arr[0]), test);
	for (a = 0;a < n;a++)
		printf("%s ", arr[a].num);
	return 0;
}



#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int main()
{
	int n;
	scanf("%d", &n);
	int a = 0;
	char(*arr)[5] = malloc(sizeof(n * 5));
    //二维数组本质上是一个数组指针
	for (a = 0;a < n;a++)
	{
		scanf("%s", arr[a]);
	}
	for (a = 0;a < n - 1;a++)
	{
		for (int b = 0;b < n - 1 - a;b++)
		{
			if (strcmp(arr[b],arr[b+1]) > 0)
			{
				char c[4] = "0";
				strcpy(c, arr[b]);
				strcpy(arr[b], arr[b + 1]);
				strcpy(arr[b + 1], c);
			}
		}
	}
	for (a = 0;a < n;a++)
		printf("%s ", arr[a]);
	return 0;
}
