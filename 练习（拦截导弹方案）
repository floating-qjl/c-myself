某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：
虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。
某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。
输入n个导弹依次飞来的高度（雷达给出的高度数据是不大于30000的正整数），计算如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。
比如：有8颗导弹，飞来的高度分别为
389  207  175  300  299  170  158  165      
那么需要2个系统来拦截，他们能够拦截的导弹最优解分别是：
系统1：拦截 389  207 175 170 158
系统2：拦截 300  299 165


#include <stdio.h>
int arr[1001];
int ch[1001][1001];
int main()
{
	int n;
	scanf("%d%d", &n, &arr[0]);
	ch[0][0] = arr[0];
	int x, b = 0;
	int num = 0;
	for (int a = 1;a < n;a++)
	{
		scanf("%d", &x);
		for (b = 0;b <= num;b++)
		{
			if (arr[b] > x)
			{
				arr[b] = x;
				ch[b][a] = arr[b];
				break;
			}
		}
		if (b == num + 1)
		{
			arr[++num] = x;
			ch[b][0] = x;
		}
	}
	printf("%d\n", num+1);
	int count = 1;
	while (arr[count-1] != 0)
	{
		printf("%d:", count);
		for (int c = 0;c < 1000;++c)
			if (ch[count - 1][c] != 0)
				printf("%d ", ch[count - 1][c]);
		printf("\n");
		++count;
	}

	return 0;
}
