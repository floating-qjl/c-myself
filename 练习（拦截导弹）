某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。

假设某天雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。 

输入n个导弹依次飞来的高度（给出的高度数据是不大于30000的正整数），计算如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。 

比如：有8颗导弹，飞来的高度分别为

389  207  175  300  299  170  158  165      
那么需要2个系统来拦截，他们能够拦截的导弹最优解分别是：

系统1：拦截 389  207 175 170 158
系统2：拦截 300  299 165







#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <string.h>

int test(int* arr, int n)
{
	if (arr[0] == 0)
		return 0;
	int num = 0;
	int ch[1000] = { 0 };
	int k = 0;
	int b = 0;
	for (int a = 1;a < n;a++)
	{
		if (arr[k] >= arr[a])
		{
			k++;
			continue;
		}
		else
		{
			ch[b] = arr[a];
			b++;
			arr[a] = arr[k];
			k++;
			num++;
		}
	}
	return 1 + test(ch, num);
}
int main()
{
	int n;
	scanf("%d", &n);
	int* arr = (int*)malloc(n * 4);
	for (int a = 0;a < n;a++)
	{
		scanf("%d", &arr[a]);
	}
	int k = test(arr, n);
	printf("%d", k);
	return 0;
}
