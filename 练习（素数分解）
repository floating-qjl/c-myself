
素数，又称质数，是指除 1 和其自身之外，没有其他约数的正整数。例如 2、3、5、13 都是素数，而 4、9、12、18 则不是。
虽然素数不能分解成除 1 和其自身之外整数的乘积，但却可以分解成更多素数的和。
你需要编程 求出一个正整数最多能分解成多少个互不相同的素数的和。
例如，21 = 2 + 19是21的合法分解方法。21 = 2 + 3 + 5 + 11则是分解为最多素数的方法。
再比如：128，最多可以分解为9个素数的和。






#include <stdio.h>
#include <stdlib.h>
int arr[250], max, n;
int is_single(int a)
{
	for (int b = 2;b * b <= a;++b)
		if (a % b == 0)
			return 0;
	return 1;
}
void judge(int sum, int count, int num)
{
	if (sum == n)
	{
		max = max > count ? max : count;
		return;
	}
	if (sum > n || arr[num] > n)
		return;
	judge(sum + arr[num], count + 1, num + 1);
	judge(sum, count, num + 1);
}
int main()
{
	scanf("%d", &n);
	int a = 0;
	for (int b = 2;b <= 250;++b)
		if (is_single(b))
			arr[a++] = b;
	judge(0, 0, 0);
	printf("%d", max);
	return 0;
}
